// Code generated by MockGen. DO NOT EDIT.
// Source: querier.go

// Package mock_permissions is a generated GoMock package.
package mock_permissions

import (
	reflect "reflect"

	permissions "github.com/cloudfoundry/go-cf-api/internal/apicommon/v3/permissions"
	gomock "github.com/golang/mock/gomock"
)

// MockQuerier is a mock of Querier interface.
type MockQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockQuerierMockRecorder
}

// MockQuerierMockRecorder is the mock recorder for MockQuerier.
type MockQuerierMockRecorder struct {
	mock *MockQuerier
}

// NewMockQuerier creates a new mock instance.
func NewMockQuerier(ctrl *gomock.Controller) *MockQuerier {
	mock := &MockQuerier{ctrl: ctrl}
	mock.recorder = &MockQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuerier) EXPECT() *MockQuerierMockRecorder {
	return m.recorder
}

// AllowedSpaceIDsForUser mocks base method.
func (m *MockQuerier) AllowedSpaceIDsForUser(userGUID string, roles ...permissions.Role) (permissions.AllowedSpaceIDs, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{userGUID}
	for _, a := range roles {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AllowedSpaceIDsForUser", varargs...)
	ret0, _ := ret[0].(permissions.AllowedSpaceIDs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllowedSpaceIDsForUser indicates an expected call of AllowedSpaceIDsForUser.
func (mr *MockQuerierMockRecorder) AllowedSpaceIDsForUser(userGUID interface{}, roles ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{userGUID}, roles...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllowedSpaceIDsForUser", reflect.TypeOf((*MockQuerier)(nil).AllowedSpaceIDsForUser), varargs...)
}
