// +build mysql

// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strings"

	"github.com/volatiletech/sqlboiler/v4/drivers"
	"github.com/volatiletech/sqlboiler/v4/queries"
	"github.com/volatiletech/sqlboiler/v4/queries/qm"
)

var subqueryDialect = drivers.Dialect{
	LQ: 0x60,
	RQ: 0x60,

	UseIndexPlaceholders:    false,
	UseLastInsertID:         true,
	UseSchema:               false,
	UseDefaultKeyword:       false,
	UseAutoColumns:          false,
	UseTopClause:            false,
	UseOutputClause:         false,
	UseCaseWhenExistsClause: false,
}

type Subquery struct {
	*queries.Query
}

// NewSubquery initializes a new Subquery using the passed in QueryMods to be used as part of a larger Query
func NewSubquery(mods ...qm.QueryMod) *Subquery {
	sq := &Subquery{
		Query: NewQuery(mods...),
	}
	queries.SetDialect(sq.Query, &subqueryDialect)

	return sq
}

func (s *Subquery) SQL() (string, []interface{}) {
	sq, args := queries.BuildQuery(s.Query)
	return strings.TrimSuffix(sq, ";"), args
}
