"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3179],{3905:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var m=n.createContext({}),u=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},o=function(e){var t=u(e.components);return n.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,f=p["".concat(m,".").concat(d)]||p[d]||s[d]||i;return r?n.createElement(f,l(l({ref:t},o),{},{components:r})):n.createElement(f,l({ref:t},o))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2439:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return o},default:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],c={},m=void 0,u={unversionedId:"Packages/internal/apicommon/v3/ratelimiter",id:"Packages/internal/apicommon/v3/ratelimiter",isDocsHomePage:!1,title:"ratelimiter",description:"`go",source:"@site/godocs/Packages/internal/apicommon/v3/ratelimiter.md",sourceDirName:"Packages/internal/apicommon/v3",slug:"/Packages/internal/apicommon/v3/ratelimiter",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3/ratelimiter",editUrl:"https://github.com/cloudfoundry/go-cf-api/edit/main/docs/godocs/Packages/internal/apicommon/v3/ratelimiter.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mocks",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3/permissions/mocks"},next:{title:"timefilters",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3/timefilters"}},o=[{value:"Index",id:"index",children:[]},{value:"Variables",id:"variables",children:[]},{value:"func NewRateLimiterMiddleware",id:"func-newratelimitermiddleware",children:[]},{value:"type RateLimiter",id:"type-ratelimiter",children:[{value:"func NewRateLimiter",id:"func-newratelimiter",children:[]}]},{value:"type ResetInterval",id:"type-resetinterval",children:[{value:"func NewUserHashResetInterval",id:"func-newuserhashresetinterval",children:[]}]},{value:"type rateLimiter",id:"type-ratelimiter-1",children:[{value:"func (*rateLimiter) Check",id:"func-ratelimiter-check",children:[]},{value:"func (*rateLimiter) Increment",id:"func-ratelimiter-increment",children:[]},{value:"func (*rateLimiter) estimateRemaining",id:"func-ratelimiter-estimateremaining",children:[]}]},{value:"type record",id:"type-record",children:[]},{value:"type userHashResetInterval",id:"type-userhashresetinterval",children:[{value:"func (*userHashResetInterval) Next",id:"func-userhashresetinterval-next",children:[]}]}],s={toc:o};function p(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ratelimiter"},"ratelimiter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/cloudfoundry/go-cf-api/internal/apicommon/v3/ratelimiter"\n')),(0,i.kt)("h2",{id:"index"},"Index"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#variables"},"Variables")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-newratelimitermiddleware"},"func NewRateLimiterMiddleware(generalRateLimiter, unauthenticatedRateLimiter RateLimiter) echo.MiddlewareFunc")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-ratelimiter"},"type RateLimiter"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-newratelimiter"},"func NewRateLimiter(globalLimit, perProcessLimit int, resetInterval ResetInterval) RateLimiter")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-resetinterval"},"type ResetInterval"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-newuserhashresetinterval"},"func NewUserHashResetInterval(interval time.Duration, now func() time.Time) ResetInterval")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-ratelimiter"},"type rateLimiter"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-ratelimiter-check"},"func (r *rateLimiter) Check(identifier string) (bool, map[string]string, error)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-ratelimiter-increment"},"func (r *rateLimiter) Increment(identifier string)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-ratelimiter-estimateremaining"},"func (r *rateLimiter) estimateRemaining(count int) int")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-record"},"type record")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#type-userhashresetinterval"},"type userHashResetInterval"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#func-userhashresetinterval-next"},"func (u *userHashResetInterval) Next(identifier string) time.Time"))))),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var now = time.Now\n")),(0,i.kt)("h2",{id:"func-newratelimitermiddleware"},"func NewRateLimiterMiddleware"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func NewRateLimiterMiddleware(generalRateLimiter, unauthenticatedRateLimiter RateLimiter) echo.MiddlewareFunc\n")),(0,i.kt)("h2",{id:"type-ratelimiter"},"type RateLimiter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type RateLimiter interface {\n    Check(identifier string) (bool, map[string]string, error)\n    Increment(identifier string)\n}\n")),(0,i.kt)("h3",{id:"func-newratelimiter"},"func NewRateLimiter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func NewRateLimiter(globalLimit, perProcessLimit int, resetInterval ResetInterval) RateLimiter\n")),(0,i.kt)("h2",{id:"type-resetinterval"},"type ResetInterval"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type ResetInterval interface {\n    Next(identifier string) time.Time\n}\n")),(0,i.kt)("h3",{id:"func-newuserhashresetinterval"},"func NewUserHashResetInterval"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func NewUserHashResetInterval(interval time.Duration, now func() time.Time) ResetInterval\n")),(0,i.kt)("h2",{id:"type-ratelimiter-1"},"type rateLimiter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type rateLimiter struct {\n    mutex           sync.Mutex\n    store           map[string]*record\n    globalLimit     int\n    perProcessLimit int\n    resetInterval   ResetInterval\n}\n")),(0,i.kt)("h3",{id:"func-ratelimiter-check"},"func ","(","*","rateLimiter",")"," Check"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (r *rateLimiter) Check(identifier string) (bool, map[string]string, error)\n")),(0,i.kt)("h3",{id:"func-ratelimiter-increment"},"func ","(","*","rateLimiter",")"," Increment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (r *rateLimiter) Increment(identifier string)\n")),(0,i.kt)("h3",{id:"func-ratelimiter-estimateremaining"},"func ","(","*","rateLimiter",")"," estimateRemaining"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (r *rateLimiter) estimateRemaining(count int) int\n")),(0,i.kt)("h2",{id:"type-record"},"type record"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type record struct {\n    count      int\n    validUntil time.Time\n}\n")),(0,i.kt)("h2",{id:"type-userhashresetinterval"},"type userHashResetInterval"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type userHashResetInterval struct {\n    interval time.Duration\n    now      func() time.Time\n}\n")),(0,i.kt)("h3",{id:"func-userhashresetinterval-next"},"func ","(","*","userHashResetInterval",")"," Next"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (u *userHashResetInterval) Next(identifier string) time.Time\n")),(0,i.kt)("p",null,"Generated by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/princjef/gomarkdoc"},"gomarkdoc")))}p.isMDXComponent=!0}}]);