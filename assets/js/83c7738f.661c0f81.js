"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[10],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(a),m=o,g=d["".concat(u,".").concat(m)]||d[m]||c[m]||n;return a?r.createElement(g,i(i({ref:t},p),{},{components:a})):r.createElement(g,i({ref:t},p))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<n;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6019:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},assets:function(){return p},toc:function(){return c},default:function(){return m}});var r=a(7462),o=a(3366),n=(a(7294),a(3905)),i=["components"],l={slug:"ADR - Logging Framework",title:"Use Zap logging as a performant and customizable structured logging framework",authors:[{name:"Florian Braun",title:"go-cf-api Team",url:"https://github.com/FloThinksPi",image_url:"https://avatars1.githubusercontent.com/u/5863788?v=4"}],tags:["adr"]},u="Use [Zap](https://github.com/uber-go/zap) logging as a performant and customizable structured logging framework",s={permalink:"/go-cf-api/adrs/ADR - Logging Framework",editUrl:"https://github.com/cloudfoundry/go-cf-api/edit/main/docs/adrs/2021-07-30-use-zap-logging-framework.md",source:"@site/adrs/2021-07-30-use-zap-logging-framework.md",title:"Use Zap logging as a performant and customizable structured logging framework",description:"* Status: accepted",date:"2021-07-30T00:00:00.000Z",formattedDate:"July 30, 2021",tags:[{label:"adr",permalink:"/go-cf-api/adrs/tags/adr"}],readingTime:1.34,truncated:!1,authors:[{name:"Florian Braun",title:"go-cf-api Team",url:"https://github.com/FloThinksPi",image_url:"https://avatars1.githubusercontent.com/u/5863788?v=4",imageURL:"https://avatars1.githubusercontent.com/u/5863788?v=4"}],prevItem:{title:"Deploy haproxy to route specific endpoints/methods to the new implementation",permalink:"/go-cf-api/adrs/ADR - Traffic Splitter"},nextItem:{title:"Use sqlboiler together with build tags to support multiple databases",permalink:"/go-cf-api/adrs/ADR - SQL Framework"}},p={authorsImageUrls:[void 0]},c=[{value:"Context and Problem Statement",id:"context-and-problem-statement",children:[],level:2},{value:"Decision Drivers",id:"decision-drivers",children:[],level:2},{value:"Considered Options",id:"considered-options",children:[],level:2},{value:"Decision Outcome",id:"decision-outcome",children:[],level:2},{value:"Pros and Cons of the Options  optional ",id:"pros-and-cons-of-the-options--optional-",children:[{value:"logrus",id:"logrus",children:[],level:3},{value:"zap",id:"zap",children:[],level:3},{value:"apex",id:"apex",children:[],level:3},{value:"zerolog",id:"zerolog",children:[],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,a=(0,o.Z)(e,i);return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Status: accepted"),(0,n.kt)("li",{parentName:"ul"},"Deciders: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/FloThinksPi"},"Florian Braun")),(0,n.kt)("li",{parentName:"ul"},"Date: 30.7.21")),(0,n.kt)("h2",{id:"context-and-problem-statement"},"Context and Problem Statement"),(0,n.kt)("p",null,"We want our PoC to log various data in a structured way so that it is parsable by e.g. logsearch."),(0,n.kt)("h2",{id:"decision-drivers"},"Decision Drivers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fast logging (no wasted cpu time)"),(0,n.kt)("li",{parentName:"ul"},"Customizable to make it compatible with the way log parsing in cloudfoundry works and maybe be able to mirror the log schema of the Cloud_Controller_NG if wanted."),(0,n.kt)("li",{parentName:"ul"},"Community support, solutions should be a broadly adapted technology.")),(0,n.kt)("h2",{id:"considered-options"},"Considered Options"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sirupsen/logrus"},"logrus")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/uber-go/zap"},"zap")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/apex/log"},"apex")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rs/zerolog"},"zerolog"))),(0,n.kt)("h2",{id:"decision-outcome"},"Decision Outcome"),(0,n.kt)("p",null,'Chosen option: "", because it has bradly used, very fast and has all features we want.\nAs we started with zap, zerolog would be an alternative but we did not think it was worth it switching over as there was no obvious benefit.\nSo we sticked to use zap.'),(0,n.kt)("h2",{id:"pros-and-cons-of-the-options--optional-"},"Pros and Cons of the Options "),(0,n.kt)("h3",{id:"logrus"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/sirupsen/logrus"},"logrus")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Good, because has all features we like"),(0,n.kt)("li",{parentName:"ul"},"Bad, because dead project, recommends alternatives"),(0,n.kt)("li",{parentName:"ul"},"Bad, because bad performance")),(0,n.kt)("h3",{id:"zap"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/uber-go/zap"},"zap")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Good, because very good performance,"),(0,n.kt)("li",{parentName:"ul"},"Good, because broadly used"),(0,n.kt)("li",{parentName:"ul"},"Good, because has all features we like")),(0,n.kt)("h3",{id:"apex"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/apex/log"},"apex")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Good, because has all features we like"),(0,n.kt)("li",{parentName:"ul"},"Bad, because I dont like the interface"),(0,n.kt)("li",{parentName:"ul"},"Bad, because it is not used by as much people as zap"),(0,n.kt)("li",{parentName:"ul"},"Bad, because it is as slow as logrus")),(0,n.kt)("h3",{id:"zerolog"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/rs/zerolog"},"zerolog")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Good, because its also very fast."),(0,n.kt)("li",{parentName:"ul"},"Good, because has all features we like"),(0,n.kt)("li",{parentName:"ul"},"Good, because also broadly used but a bit less than zap")))}m.isMDXComponent=!0}}]);