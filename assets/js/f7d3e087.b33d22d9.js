"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8899],{3905:function(e,n,a){a.d(n,{Zo:function(){return d},kt:function(){return m}});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function c(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?c(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var o=r.createContext({}),u=function(e){var n=r.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,c=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=t,f=p["".concat(o,".").concat(m)]||p[m]||s[m]||c;return a?r.createElement(f,i(i({ref:n},d),{},{components:a})):r.createElement(f,i({ref:n},d))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var c=a.length,i=new Array(c);i[0]=p;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var u=2;u<c;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},9259:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=a(7462),t=a(3366),c=(a(7294),a(3905)),i=["components"],l={},o=void 0,u={unversionedId:"Packages/internal/apicommon/v3/auth",id:"Packages/internal/apicommon/v3/auth",isDocsHomePage:!1,title:"auth",description:"`go",source:"@site/godocs/Packages/internal/apicommon/v3/auth.md",sourceDirName:"Packages/internal/apicommon/v3",slug:"/Packages/internal/apicommon/v3/auth",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3/auth",editUrl:"https://github.com/cloudfoundry/go-cf-api/edit/main/docs/godocs/Packages/internal/apicommon/v3/auth.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"v3",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3"},next:{title:"metadata",permalink:"/cloudfoundry/go-cf-api/godocs/Packages/internal/apicommon/v3/metadata"}},d=[{value:"Index",id:"index",children:[]},{value:"Constants",id:"constants",children:[]},{value:"Variables",id:"variables",children:[]},{value:"func CanRead",id:"func-canread",children:[]},{value:"func CanWrite",id:"func-canwrite",children:[]},{value:"func IsAdmin",id:"func-isadmin",children:[]},{value:"func IsAdminReadOnly",id:"func-isadminreadonly",children:[]},{value:"func IsGlobalAuditor",id:"func-isglobalauditor",children:[]},{value:"func NewJWTMiddleware",id:"func-newjwtmiddleware",children:[]},{value:"func NewRequiresReadMiddleware",id:"func-newrequiresreadmiddleware",children:[]},{value:"func NewRequiresWriteMiddleware",id:"func-newrequireswritemiddleware",children:[]},{value:"func NewSuccessHandler",id:"func-newsuccesshandler",children:[]},{value:"func hasScope",id:"func-hasscope",children:[]},{value:"func newRequiresScopesMiddleware",id:"func-newrequiresscopesmiddleware",children:[]},{value:"type CFClaims",id:"type-cfclaims",children:[{value:"func (*CFClaims) Valid",id:"func-cfclaims-valid",children:[]}]},{value:"type Scope",id:"type-scope",children:[]}],s={toc:d};function p(e){var n=e.components,a=(0,t.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"auth"},"auth"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/cloudfoundry/go-cf-api/internal/apicommon/v3/auth"\n')),(0,c.kt)("h2",{id:"index"},"Index"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#constants"},"Constants")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#variables"},"Variables")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-canread"},"func CanRead(c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-canwrite"},"func CanWrite(c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-isadmin"},"func IsAdmin(c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-isadminreadonly"},"func IsAdminReadOnly(c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-isglobalauditor"},"func IsGlobalAuditor(c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-newjwtmiddleware"},"func NewJWTMiddleware(keyFunc jwt.Keyfunc) echo.MiddlewareFunc")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-newrequiresreadmiddleware"},"func NewRequiresReadMiddleware() echo.MiddlewareFunc")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-newrequireswritemiddleware"},"func NewRequiresWriteMiddleware() echo.MiddlewareFunc")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-newsuccesshandler"},"func NewSuccessHandler() middleware.JWTSuccessHandler")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-hasscope"},"func hasScope(scope Scope, c echo.Context) bool")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-newrequiresscopesmiddleware"},"func newRequiresScopesMiddleware(scopes []Scope, verb string) echo.MiddlewareFunc")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#type-cfclaims"},"type CFClaims"),(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#func-cfclaims-valid"},"func (c *CFClaims) Valid() error")))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#type-scope"},"type Scope"))),(0,c.kt)("h2",{id:"constants"},"Constants"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    Username = "username"\n    Scopes   = "scopes"\n)\n')),(0,c.kt)("h2",{id:"variables"},"Variables"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"var (\n    readScopes  = []Scope{Read, Admin, AdminReadOnly, GlobalAuditor}\n    writeScopes = []Scope{Write, Admin}\n)\n")),(0,c.kt)("h2",{id:"func-canread"},"func CanRead"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func CanRead(c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-canwrite"},"func CanWrite"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func CanWrite(c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-isadmin"},"func IsAdmin"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func IsAdmin(c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-isadminreadonly"},"func IsAdminReadOnly"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func IsAdminReadOnly(c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-isglobalauditor"},"func IsGlobalAuditor"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func IsGlobalAuditor(c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-newjwtmiddleware"},"func NewJWTMiddleware"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func NewJWTMiddleware(keyFunc jwt.Keyfunc) echo.MiddlewareFunc\n")),(0,c.kt)("h2",{id:"func-newrequiresreadmiddleware"},"func NewRequiresReadMiddleware"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func NewRequiresReadMiddleware() echo.MiddlewareFunc\n")),(0,c.kt)("h2",{id:"func-newrequireswritemiddleware"},"func NewRequiresWriteMiddleware"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func NewRequiresWriteMiddleware() echo.MiddlewareFunc\n")),(0,c.kt)("h2",{id:"func-newsuccesshandler"},"func NewSuccessHandler"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func NewSuccessHandler() middleware.JWTSuccessHandler\n")),(0,c.kt)("h2",{id:"func-hasscope"},"func hasScope"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func hasScope(scope Scope, c echo.Context) bool\n")),(0,c.kt)("h2",{id:"func-newrequiresscopesmiddleware"},"func newRequiresScopesMiddleware"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func newRequiresScopesMiddleware(scopes []Scope, verb string) echo.MiddlewareFunc\n")),(0,c.kt)("h2",{id:"type-cfclaims"},"type CFClaims"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},'type CFClaims struct {\n    Audience  []string `json:"aud"`\n    ClientID  string   `json:"client_id,omitempty"`\n    ExpiresAt int64    `json:"exp,omitempty"`\n    ID        string   `json:"jti,omitempty"`\n    IssuedAt  int64    `json:"iat,omitempty"`\n    Issuer    string   `json:"iss,omitempty"`\n    Subject   string   `json:"sub,omitempty"`\n    UserID    string   `json:"user_id"`\n    Username  string   `json:"user_name"`\n    Scopes    []string `json:"scope"`\n}\n')),(0,c.kt)("h3",{id:"func-cfclaims-valid"},"func ","(","*","CFClaims",")"," Valid"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"func (c *CFClaims) Valid() error\n")),(0,c.kt)("h2",{id:"type-scope"},"type Scope"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},"type Scope string\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    Read          Scope = "cloud_controller.read"\n    Write         Scope = "cloud_controller.write"\n    Admin         Scope = "cloud_controller.admin"\n    AdminReadOnly Scope = "cloud_controller.admin_read_only"\n    GlobalAuditor Scope = "cloud_controller.global_auditor"\n)\n')),(0,c.kt)("p",null,"Generated by ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/princjef/gomarkdoc"},"gomarkdoc")))}p.isMDXComponent=!0}}]);